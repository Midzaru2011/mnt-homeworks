---
- name: Preapre all hosts
  hosts: all
  tasks:
    - name: Create group
      become: true
      group:
        name: "{{ user_group }}"
        state: present
    - name: Create user
      become: true
      user:
        name: "{{ user_name }}"
        generate_ssh_key: true
      register: ssh_key_info
    - name: Install JDK
      become: true
      package:
        name: "{{ java_packages }}"
        state: present
    - name: Install ACL
      become: true
      ansible.builtin.apt:
          name: acl
          state: present
- name: Get Jenkins master installed
  hosts: jenkins_masters
  tasks:
    - name: Add Jenkins key
      become: true
      ansible.builtin.apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present
    - name: Add jenkins repo list file into sources.list.d
      become: true
      ansible.builtin.apt_repository:
        repo: "deb https://pkg.jenkins.io/debian-stable binary/"
        state: present
        update_cache: true
    - name: Install Jenkins and requirements
      become: true
      ansible.builtin.apt:
        name:
          - jenkins
          - git
        state: present
      register: jenkins_installed
    - name: Ensure jenkins agents are present in known_hosts file
      become: true
      become_user: "{{ jenkins_user_name }}"
      known_hosts:
        name: "{{ hostvars[item].ansible_host }}"
        state: present
        key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].ansible_host }}') }}"
        hash_host: true
      with_items: "{{ groups.jenkins_agents }}"
    - name: Start Jenkins
      become: true
      systemd:
        name: jenkins
        state: restarted
        enabled: true
      when: jenkins_installed is changed
- name: Prepare jenkins agent
  hosts: jenkins_agents
  become: true
  become_user: "{{ jenkins_user_name }}"
  tasks:
    - name: Add master publickey into authorized_key
      authorized_key:
        user: "{{ jenkins_user_name }}"
        state: present
        key: "{{ hostvars['jenkins-master-01']['ssh_key_info']['ssh_public_key'] }}"
    - name: Create agent_dir
      become_user: root
      file:
        path: "{{ jenkins_agent_dir }}"
        state: directory
        owner: "{{ jenkins_user_name }}"
        group: "{{ jenkins_user_group }}"
    - name: Install aptitude
      become_user: root
      apt:
        name: aptitude
        state: latest
        update_cache: true
    - name: Install required system packages
      become_user: root
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true
    - name: Add Docker GPG apt Key
      become_user: root
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: Add Docker Repository
      become_user: root
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
    - name: Update apt and install docker-ce
      become_user: root
      apt:
        name: docker-ce
        state: latest
        update_cache: true
    - name: Install Docker Module for Python
      become_user: root
      pip:
        name: docker
    - name: Add local to PATH
      lineinfile:
        dest: ~/.bashrc
        regexp: export PATH=$PATH:/home/jenkins/.local/bin
        line: export PATH=$PATH:/home/jenkins/.local/bin
    - name: Create docker group
      become_user: root
      group:
        name: docker
        state: present
    - name: Add jenkinsuser to dockergroup
      become_user: root
      user:
        name: "{{ jenkins_user_name }}"
        groups: docker
    - name: Restart docker
      become_user: root
      systemd:
        name: docker
        state: restarted
        enabled: true
    - name: Install agent.jar
      get_url:
        url: "http://{{ hostvars['jenkins-master-01']['ansible_host'] }}:8080/jnlpJars/agent.jar"
        dest: "{{ jenkins_agent_dir }}"
      register: install_agent
      until: install_agent is succeeded
      retries: 20
      timeout: 30
